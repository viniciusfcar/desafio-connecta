{"version":3,"sources":["components/RouteHandler.js","assets/imagens/welcome.jpeg","pages/Signin/index.js","assets/imagens/success.jpeg","pages/Success/index.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["RouteHandler","children","routeProps","email","localStorage","getItem","authorized","private","render","to","SignIn","classes","useStyles","useState","show","setShow","validationSchema","yup","shape","required","password","formik","useFormik","initialValues","onSubmit","values","length","setItem","window","location","href","alert","Container","component","maxWidth","CssBaseline","className","paper","logo","src","welcome","alt","align","title","form","noValidate","clear","Button","type","fullWidth","variant","color","Typography","handleSubmit","TextField","margin","id","label","name","autoComplete","autoFocus","value","onChange","handleChange","error","touched","Boolean","errors","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","submit","makeStyles","theme","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","background","flexGrow","textTransform","link","fontSize","Success","success","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c8752e.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst RouteHandler = ({ children, ...routeProps }) => {\n\n    const email = localStorage.getItem('email')\n    const authorized = (routeProps.private && !email) ? false : true\n\n    return (\n        <Route {...routeProps}\n            render={() =>\n                authorized ? children : <Redirect to='/' />\n            }\n        />\n    );\n}\n\nexport default RouteHandler","export default __webpack_public_path__ + \"static/media/welcome.cdb08059.jpeg\";","import React, { useState, useContext} from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nimport EmailIcon from '@material-ui/icons/Email'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\n\nimport welcome from '../../assets/imagens/welcome.jpeg'\n\nimport {\n    Button, CssBaseline, TextField, Typography,\n    Container, makeStyles, InputAdornment, IconButton,\n} from '@material-ui/core'\n\n\nconst SignIn = () => {\n\n    const classes = useStyles()\n    const [show, setShow] = useState(false)\n    const email = localStorage.getItem('email')\n\n    const initialFormState = {\n        email: '',\n        password: ''\n    }\n\n    const validationSchema = yup.object().shape({\n        email: yup.string().email('Entre com um e-mail válido!').required('O e-mail é obrigatório!'),\n        password: yup.string('Entre com sua senha').required('A senha é obrigatória!'),\n    })\n\n    const formik = useFormik({\n        initialValues: initialFormState,\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            if(values.email.length === 0 || values.password.length === 0) {\n                return\n            } else if(values.email == 'desafio@connecta.com' && values.password == '123'){\n                localStorage.setItem('email', values.email)\n                window.location.href = '/success'\n            \n            } else {\n                alert('E-mail e/ou senha inválidos!')\n            }\n        }\n    })\n\n    const logout = () => {\n        localStorage.clear()\n        window.location.href = '/'\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n                {email &&\n                    <div className={classes.paper}>\n                        <img className={classes.logo} src={welcome} alt='' />\n                        <p align=\"center\">\n                            Conectado como:\n                            <h2 className={classes.title}>\n                                {email}\n                            </h2>\n                        </p>\n                        <form className={classes.form} noValidate onSubmit={logout}>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Limpar dados e Sair\n                            </Button>\n                        </form>\n                    </div>\n                }\n                {!email &&\n                    <div className={classes.paper}>\n                        <img className={classes.logo} src={welcome} alt='' />\n                        <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                            REALIZE SEU LOGIN\n                        </Typography> \n                        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"E-mail\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                error={formik.touched.email && Boolean(formik.errors.email)}\n                                helperText={formik.touched.email && formik.errors.email}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton color='default'>\n                                                <EmailIcon />\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                            <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                label=\"Senha\"\n                                variant='outlined'\n                                fullWidth\n                                required\n                                type={show ? 'text' : 'password'}\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                autoComplete=\"current-password\"\n                                error={formik.touched.password && Boolean(formik.errors.password)}\n                                helperText={formik.touched.password && formik.errors.password}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                color='default'\n                                                onClick={() => setShow(!show)}\n                                            >\n                                                {show ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Entrar\n                            </Button>\n                            \n                        </form>\n                    </div>\n                }\n        </Container>\n    );\n}\n\nexport default SignIn\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: '#070',\n\n        '&:hover': {\n            background: '#005200'\n        },\n    },\n    logo: {\n        width: 300,\n        marginTop: '20%'\n    },\n    title: {\n        flexGrow: 1,\n        textTransform: 'capitalize',\n        marginTop: '10%',\n    },\n    link: {\n        fontSize: 20\n    }\n}));","export default __webpack_public_path__ + \"static/media/success.5904a8bb.jpeg\";","import React, { useState, useContext } from 'react'\n\nimport success from '../../assets/imagens/success.jpeg'\n\nimport {\n    Button, CssBaseline, Typography, Container, makeStyles,\n} from '@material-ui/core'\n\nconst Success = () => {\n\n    const classes = useStyles()\n    const email = localStorage.getItem('email')\n\n    const logout = () => {\n        window.location.href = '/'\n        localStorage.clear()\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <img className={classes.logo} src={success} alt='' />\n                \n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                    Boas Vindas, {email}!\n                </Typography>\n                \n                <p>Este foi o desafio desenvolvido por Vinicius Carneiro,\n                    espero que tenha sido satisfatório e que eu possa ser selecionado para a vaga.\n                </p>\n                <p>Até a próxima :)</p>\n\n                <form className={classes.form} noValidate onSubmit={logout}>\n                    <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Limpar dados e Sair\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nexport default Success\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    logo: {\n        width: 300,\n        marginTop: '20%'\n    },\n    title: {\n        flexGrow: 1,\n        textTransform: 'capitalize',\n        marginTop: '10%',\n    },\n}));","import React from 'react'\nimport { Switch } from 'react-router-dom'\n\nimport RoutesHandler from '../components/RouteHandler'\n\nimport SignIn from '../pages/Signin'\nimport Success from '../pages/Success'\n\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <RoutesHandler exact path='/'>\n                <SignIn />\n            </RoutesHandler>\n            <RoutesHandler private path='/success'>\n                <Success/>\n            </RoutesHandler>\n        </Switch>\n    )\n\n}\n\nexport default Routes","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css';\n\nimport Routes from './routes/Routes'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}