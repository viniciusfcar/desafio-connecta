{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Documentos/entrevista/desafio-connecta/src/pages/Signin/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport welcome from '../../assets/imagens/welcome.jpeg';\nimport { Button, CssBaseline, TextField, Typography, Container, makeStyles, InputAdornment, IconButton } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const classes = useStyles();\n  const [show, setShow] = useState(false);\n  const email = localStorage.getItem('email');\n  const initialFormState = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = yup.object().shape({\n    email: yup.string().email('Entre com um e-mail válido!').required('O e-mail é obrigatório!'),\n    password: yup.string('Entre com sua senha').required('A senha é obrigatória!')\n  });\n  const formik = useFormik({\n    initialValues: initialFormState,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (values.email.length === 0 || values.password.length === 0) {\n        return;\n      } else if (values.email == 'desafio@connecta.com' && values.password == '123') {\n        console.log('aqui2');\n        localStorage.setItem('email', values.email);\n        console.log(localStorage.getItem('email'));\n        window.location.href = '/success';\n      } else {\n        alert('E-mail e/ou senha inválidos!');\n      }\n    }\n  });\n\n  const logout = () => {\n    localStorage.clear();\n    window.location.href = '/';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), email && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.logo,\n        src: welcome,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        align: \"center\",\n        children: [\"Conectado como:\", /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.title,\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: logout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Limpar dados e Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), !email && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.logo,\n        src: welcome,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        className: classes.title,\n        children: \"REALIZE SEU LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"E-mail\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"default\",\n                children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          name: \"password\",\n          label: \"Senha\",\n          variant: \"outlined\",\n          fullWidth: true,\n          required: true,\n          type: show ? 'text' : 'password',\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          autoComplete: \"current-password\",\n          error: formik.touched.password && Boolean(formik.errors.password),\n          helperText: formik.touched.password && formik.errors.password,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"default\",\n                onClick: () => setShow(!show),\n                children: show ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 57\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 74\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"gZXCN3OFyzk1K/g6EM5VR64FfCA=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: '#070',\n    '&:hover': {\n      background: '#005200'\n    }\n  },\n  logo: {\n    width: 300,\n    marginTop: '20%'\n  },\n  title: {\n    flexGrow: 1,\n    textTransform: 'capitalize',\n    marginTop: '10%'\n  },\n  link: {\n    fontSize: 20\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/vinicius/Documentos/entrevista/desafio-connecta/src/pages/Signin/index.js"],"names":["React","useState","useContext","useFormik","yup","EmailIcon","Visibility","VisibilityOff","welcome","Button","CssBaseline","TextField","Typography","Container","makeStyles","InputAdornment","IconButton","SignIn","classes","useStyles","show","setShow","email","localStorage","getItem","initialFormState","password","validationSchema","object","shape","string","required","formik","initialValues","onSubmit","values","length","console","log","setItem","window","location","href","alert","logout","clear","paper","logo","title","form","handleSubmit","handleChange","touched","Boolean","errors","endAdornment","submit","theme","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","width","background","flexGrow","textTransform","link","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useContext} from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nimport EmailIcon from '@material-ui/icons/Email'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\n\nimport welcome from '../../assets/imagens/welcome.jpeg'\n\nimport {\n    Button, CssBaseline, TextField, Typography,\n    Container, makeStyles, InputAdornment, IconButton,\n} from '@material-ui/core'\n\n\nconst SignIn = () => {\n\n    const classes = useStyles()\n    const [show, setShow] = useState(false)\n    const email = localStorage.getItem('email')\n\n    const initialFormState = {\n        email: '',\n        password: ''\n    }\n\n    const validationSchema = yup.object().shape({\n        email: yup.string().email('Entre com um e-mail válido!').required('O e-mail é obrigatório!'),\n        password: yup.string('Entre com sua senha').required('A senha é obrigatória!'),\n    })\n\n    const formik = useFormik({\n        initialValues: initialFormState,\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            if(values.email.length === 0 || values.password.length === 0) {\n                return\n            } else if(values.email == 'desafio@connecta.com' && values.password == '123'){\n                console.log('aqui2')\n                localStorage.setItem('email', values.email)\n                console.log(localStorage.getItem('email'))\n                window.location.href = '/success'\n            \n            } else {\n                alert('E-mail e/ou senha inválidos!')\n            }\n        }\n    })\n\n    const logout = () => {\n        localStorage.clear()\n        window.location.href = '/'\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n                {email &&\n                    <div className={classes.paper}>\n                        <img className={classes.logo} src={welcome} alt='' />\n                        <p align=\"center\">\n                            Conectado como:\n                            <h2 className={classes.title}>\n                                {email}\n                            </h2>\n                        </p>\n                        <form className={classes.form} noValidate onSubmit={logout}>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Limpar dados e Sair\n                            </Button>\n                        </form>\n                    </div>\n                }\n                {!email &&\n                    <div className={classes.paper}>\n                        <img className={classes.logo} src={welcome} alt='' />\n                        <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                            REALIZE SEU LOGIN\n                        </Typography> \n                        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"E-mail\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                error={formik.touched.email && Boolean(formik.errors.email)}\n                                helperText={formik.touched.email && formik.errors.email}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton color='default'>\n                                                <EmailIcon />\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                            <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                label=\"Senha\"\n                                variant='outlined'\n                                fullWidth\n                                required\n                                type={show ? 'text' : 'password'}\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                autoComplete=\"current-password\"\n                                error={formik.touched.password && Boolean(formik.errors.password)}\n                                helperText={formik.touched.password && formik.errors.password}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                color='default'\n                                                onClick={() => setShow(!show)}\n                                            >\n                                                {show ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Entrar\n                            </Button>\n                            \n                        </form>\n                    </div>\n                }\n        </Container>\n    );\n}\n\nexport default SignIn\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: '#070',\n\n        '&:hover': {\n            background: '#005200'\n        },\n    },\n    logo: {\n        width: 300,\n        marginTop: '20%'\n    },\n    title: {\n        flexGrow: 1,\n        textTransform: 'capitalize',\n        marginTop: '10%',\n    },\n    link: {\n        fontSize: 20\n    }\n}));"]},"metadata":{},"sourceType":"module"}