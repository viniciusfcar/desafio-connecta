{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Documentos/entrevista/desafio-connecta/src/pages/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport register from '../../assets/imagens/register.png';\nimport registered from '../../assets/imagens/registered.png';\nimport { Button, CssBaseline, TextField, Typography, Container, makeStyles, InputAdornment, IconButton, Grid, Link } from '@material-ui/core';\nimport { AuthContext } from '../../context/AuthContext';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const classes = useStyles();\n  const [show, setShow] = useState(false);\n  const initialFormState = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = yup.object().shape({\n    email: yup.string().email('Entre com um e-mail válido!').required('O e-mail é obrigatório!'),\n    password: yup.string('Entre com sua senha').required('A senha é obrigatória!')\n  });\n  const formik = useFormik({\n    initialValues: initialFormState,\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      await signIn(values.email.trim(), values.password.trim());\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.logo,\n          src: registered,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          align: \"center\",\n          children: [\"Conectado como:\", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: classes.title,\n            children: user === null || user === void 0 ? void 0 : user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Limpar dados e Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.logo,\n          src: success,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"E-mail\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            error: formik.touched.email && Boolean(formik.errors.email),\n            helperText: formik.touched.email && formik.errors.email,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"default\",\n                  children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            label: \"Senha\",\n            variant: \"outlined\",\n            fullWidth: true,\n            required: true,\n            type: show ? 'text' : 'password',\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            autoComplete: \"current-password\",\n            error: formik.touched.password && Boolean(formik.errors.password),\n            helperText: formik.touched.password && formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Registrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"xFG1VHcjKdSUKmpCx9MuWVgPF5M=\", true, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  logo: {\n    width: 300,\n    marginTop: '20%'\n  },\n  title: {\n    flexGrow: 1,\n    textTransform: 'capitalize',\n    marginTop: '10%'\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/vinicius/Documentos/entrevista/desafio-connecta/src/pages/Form/index.js"],"names":["React","useState","useContext","register","registered","Button","CssBaseline","TextField","Typography","Container","makeStyles","InputAdornment","IconButton","Grid","Link","AuthContext","EmailIcon","Visibility","VisibilityOff","Form","user","classes","useStyles","show","setShow","initialFormState","email","password","validationSchema","yup","object","shape","string","required","formik","useFormik","initialValues","onSubmit","values","signIn","trim","paper","logo","title","username","success","form","handleSubmit","handleChange","touched","Boolean","errors","endAdornment","submit","theme","marginTop","spacing","display","flexDirection","alignItems","width","flexGrow","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\n\n\nimport register from '../../assets/imagens/register.png'\nimport registered from '../../assets/imagens/registered.png'\n\nimport {\n    Button, CssBaseline, TextField, Typography,\n    Container, makeStyles, InputAdornment, IconButton, Grid,\n    Link\n} from '@material-ui/core'\n\nimport { AuthContext } from '../../context/AuthContext'\nimport EmailIcon from '@material-ui/icons/Email'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\n\nconst Form = () => {\n\n    const {user} = useContext(AuthContext)\n\n    const classes = useStyles()\n    const [show, setShow] = useState(false)\n\n    const initialFormState = {\n        email: '',\n        password: ''\n    }\n\n    const validationSchema = yup.object().shape({\n        email: yup.string().email('Entre com um e-mail válido!').required('O e-mail é obrigatório!'),\n        password: yup.string('Entre com sua senha').required('A senha é obrigatória!'),\n    })\n\n    const formik = useFormik({\n        initialValues: initialFormState,\n        validationSchema: validationSchema,\n        onSubmit: async (values) => {\n            await signIn(values.email.trim(), values.password.trim())\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                {user && \n                    <div>\n                        <img className={classes.logo} src={registered} alt='' />\n\n                        <p align=\"center\">\n                            Conectado como:\n                            <h2 className={classes.title}>\n                                {user?.username}\n                            </h2>\n                        </p>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Limpar dados e Sair\n                        </Button>\n                    </div>\n                }\n                {!user &&\n                    <div>\n                        <img className={classes.logo} src={success} alt='' />\n                        \n                        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"E-mail\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                error={formik.touched.email && Boolean(formik.errors.email)}\n                                helperText={formik.touched.email && formik.errors.email}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton color='default'>\n                                                <EmailIcon />\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                            <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                label=\"Senha\"\n                                variant='outlined'\n                                fullWidth\n                                required\n                                type={show ? 'text' : 'password'}\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                autoComplete=\"current-password\"\n                                error={formik.touched.password && Boolean(formik.errors.password)}\n                                helperText={formik.touched.password && formik.errors.password}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Registrar\n                            </Button>\n                        </form>\n                    </div>\n                }\n            </div>\n        </Container>\n    )\n}\n\nexport default Form\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    logo: {\n        width: 300,\n        marginTop: '20%'\n    },\n    title: {\n        flexGrow: 1,\n        textTransform: 'capitalize',\n        marginTop: '10%',\n    },\n}));"]},"metadata":{},"sourceType":"module"}